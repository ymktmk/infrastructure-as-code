# IAM RoleにEKSの権限を付与する
# Cluster作成者と別のIAMユーザーでアクセスする

# EKSのKubernetes Clusterを作成した場合、作成したIAM Userの情報は自動的にRBACに登録されるため、
# Cluster作成ユーザーは認可が通るものの、
# それ以外のIAMユーザーはRBACの設定はされないので、Unauthorizedとなってしまう訳です。

# arn:aws:iam::009554248005:role/green-eks-node-group-20220729041227318700000001
# kubectl edit -n kube-system configmap/aws-auth
name: job

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs: 
  migation:
    name: migration
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ap-northeast-1
        role-to-assume: arn:aws:iam::009554248005:role/green-eks-node-group-20220729041227318700000001
        # role-to-assume: arn:aws:iam::009554248005:role/eks-cluster-20220729041227318800000002
    
    - run: aws sts get-caller-identity

    - name: Configure EKS
      run: |
        aws eks --region ap-northeast-1 update-kubeconfig --name eks

    - name: Run kubectl
      run: |
        kubectl get pod


# jobs: 
#   migation:
#     name: migration
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#     - uses: actions/checkout@v2

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-region: ap-northeast-1
#         role-to-assume: arn:aws:iam::009554248005:role/GitHubActionsOIDCTest

#     - name: sts EKS
#       run: |
#         aws sts assume-role --role-arn arn:aws:iam::009554248005:role/eks-cluster-20220729041227318800000002 --role-session-name test

#     - name: confirm 
#       run: aws sts get-caller-identity

#     - name: Configure EKS
#       run: |
#         aws eks --region ap-northeast-1 update-kubeconfig --name eks --role-arn arn:aws:iam::009554248005:role/eks-cluster-20220729041227318800000002

#     - name: Run kubectl
#       run: |
#         kubectl config view --minify
#         kubectl get pod
